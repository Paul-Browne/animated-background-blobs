{
  "version": 3,
  "sources": ["../../abb.js"],
  "sourcesContent": ["const updateStyle = points => points.map(point => `radial-gradient(at ${point.x}% ${point.y}%, ${point.color} 0px, transparent 50%)`).join(\",\");\n\nconst loadNoise = ({\n    width,\n    height,\n    opacity = 0.5,\n    baseFrequency = 2,\n    numOctaves = 1,\n    type = 'fractalNoise',\n    grayScale = true\n} = {}) => {\n    const gs = `%3CfeColorMatrix type='matrix' values='0.33 0.33 0.33 0 0 0.33 0.33 0.33 0 0 0.33 0.33 0.33 0 0 0 0 0 1 0' /%3E`\n    return `\"data:image/svg+xml,%3Csvg viewBox='0 0 ${width} ${height}' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='${type}' baseFrequency='${baseFrequency}' numOctaves='${numOctaves}' stitchTiles='stitch'/%3E${grayScale ? gs : ''}%3C/filter%3E%3Crect opacity='${opacity}' width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E\"`;\n}\n\nconst round = n => Math.round(n * 10)/10\n\nconst updatePosition = points => points.map(p => {\n  let {x, y, vx, vy, color} = p\n  if(x + vx > 100 || x + vx < 0){\n    vx = -vx\n  }\n  if(y + vy > 100 || y + vy < 0){\n    vy = -vy\n  }\n  return {\n    x: round(x + vx),\n    y: round(y + vy),\n    vx: round(vx), \n    vy: round(vy),\n    color\n  }\n})\n\nexport default abb = ({\n  element,\n  background= \"hsla(108,44%,72%,1)\",\n  colors= [\n    \"hsla(302,71%,61%,1)\",\n    \"hsla(36,100%,50%,1)\",\n    \"hsla(0,100%,50%,1)\",\n    \"hsla(190,100%,50%,1)\",\n    \"hsla(261,100%,50%,1)\"\n  ],\n  speed= 1,\n  opacity = 1,\n  grain: {\n    opacity:grainOpacity = 0.5,\n    strength = 1\n  } = {}\n} = {}) => {\n  if(!element) return;\n  \n  const stylesheet = new CSSStyleSheet();\n  document.adoptedStyleSheets = [stylesheet];\n  let points = colors.reverse().map(color => {\n    return {\n      x: Math.random() * 100,\n      y: Math.random() * 100,\n      vx: (Math.random() - 0.5) * speed,\n      vy: (Math.random() - 0.5) * speed,\n      color\n    }\n  })\n   \n  const fps = 60;\n  const interval = 1000/fps;\n  let then;\n  function animate(timestamp){\n    requestAnimationFrame(animate);\n    then = then ? then : timestamp\n    const delta = timestamp - then;\n    if(delta > interval){\n      then = timestamp - (delta % interval);\n      \n      if(opacity || strength){\n        const {width, height} = document.querySelector(element).getBoundingClientRect();\n        const makeNoise = loadNoise({\n          width,\n          height,\n          opacity: grainOpacity,\n          baseFrequency: 2/strength\n        });      \n        stylesheet.replaceSync(`${element}:after{background: url(${makeNoise});}${element}:before{opacity:${opacity};background-color:${background};background-image:${updateStyle(points)};}`);\n      }else{\n        stylesheet.replaceSync(`${element}:before{opacity:${opacity};background-color:${background};background-image:${updateStyle(points)};}`);      \n      }\n      points = updatePosition(points);       \n    }    \n  }\n  animate();\n}\n"],
  "mappings": "MAAA,IAAMA,EAAcC,GAAUA,EAAO,IAAIC,GAAS,sBAAsBA,EAAM,CAAC,KAAKA,EAAM,CAAC,MAAMA,EAAM,KAAK,wBAAwB,EAAE,KAAK,GAAG,EAExIC,EAAY,CAAC,CACf,MAAAC,EACA,OAAAC,EACA,QAAAC,EAAU,GACV,cAAAC,EAAgB,EAChB,WAAAC,EAAa,EACb,KAAAC,EAAO,eACP,UAAAC,EAAY,EAChB,EAAI,CAAC,IAEM,2CAA2CN,CAAK,IAAIC,CAAM,6FAA6FI,CAAI,oBAAoBF,CAAa,iBAAiBC,CAAU,6BAA6BE,EADhP,kHACiQ,EAAE,iCAAiCJ,CAAO,+EAGpTK,EAAQC,GAAK,KAAK,MAAMA,EAAI,EAAE,EAAE,GAEhCC,EAAiBZ,GAAUA,EAAO,IAAIa,GAAK,CAC/C,GAAI,CAAC,EAAAC,EAAG,EAAAC,EAAG,GAAAC,EAAI,GAAAC,EAAI,MAAAC,CAAK,EAAIL,EAC5B,OAAGC,EAAIE,EAAK,KAAOF,EAAIE,EAAK,KAC1BA,EAAK,CAACA,IAELD,EAAIE,EAAK,KAAOF,EAAIE,EAAK,KAC1BA,EAAK,CAACA,GAED,CACL,EAAGP,EAAMI,EAAIE,CAAE,EACf,EAAGN,EAAMK,EAAIE,CAAE,EACf,GAAIP,EAAMM,CAAE,EACZ,GAAIN,EAAMO,CAAE,EACZ,MAAAC,CACF,CACF,CAAC,EAEMC,EAAQ,IAAM,CAAC,CACpB,QAAAC,EACA,WAAAC,EAAY,sBACZ,OAAAC,EAAQ,CACN,sBACA,sBACA,qBACA,uBACA,sBACF,EACA,MAAAC,EAAO,EACP,QAAAlB,EAAU,EACV,MAAO,CACL,QAAQmB,EAAe,GACvB,SAAAC,EAAW,CACb,EAAI,CAAC,CACP,EAAI,CAAC,IAAM,CACT,GAAG,CAACL,EAAS,OAEb,IAAMM,EAAa,IAAI,cACvB,SAAS,mBAAqB,CAACA,CAAU,EACzC,IAAI1B,EAASsB,EAAO,QAAQ,EAAE,IAAIJ,IACzB,CACL,EAAG,KAAK,OAAO,EAAI,IACnB,EAAG,KAAK,OAAO,EAAI,IACnB,IAAK,KAAK,OAAO,EAAI,IAAOK,EAC5B,IAAK,KAAK,OAAO,EAAI,IAAOA,EAC5B,MAAAL,CACF,EACD,EAGKS,EAAW,IADL,GAERC,EACJ,SAASC,EAAQC,EAAU,CACzB,sBAAsBD,CAAO,EAC7BD,EAAOA,GAAcE,EACrB,IAAMC,EAAQD,EAAYF,EAC1B,GAAGG,EAAQJ,EAAS,CAGlB,GAFAC,EAAOE,EAAaC,EAAQJ,EAEzBtB,GAAWoB,EAAS,CACrB,GAAM,CAAC,MAAAtB,EAAO,OAAAC,CAAM,EAAI,SAAS,cAAcgB,CAAO,EAAE,sBAAsB,EACxEY,EAAY9B,EAAU,CAC1B,MAAAC,EACA,OAAAC,EACA,QAASoB,EACT,cAAe,EAAEC,CACnB,CAAC,EACDC,EAAW,YAAY,GAAGN,CAAO,0BAA0BY,CAAS,MAAMZ,CAAO,mBAAmBf,CAAO,qBAAqBgB,CAAU,qBAAqBtB,EAAYC,CAAM,CAAC,IAAI,CACxL,MACE0B,EAAW,YAAY,GAAGN,CAAO,mBAAmBf,CAAO,qBAAqBgB,CAAU,qBAAqBtB,EAAYC,CAAM,CAAC,IAAI,EAExIA,EAASY,EAAeZ,CAAM,CAChC,CACF,CACA6B,EAAQ,CACV",
  "names": ["updateStyle", "points", "point", "loadNoise", "width", "height", "opacity", "baseFrequency", "numOctaves", "type", "grayScale", "round", "n", "updatePosition", "p", "x", "y", "vx", "vy", "color", "abb_default", "element", "background", "colors", "speed", "grainOpacity", "strength", "stylesheet", "interval", "then", "animate", "timestamp", "delta", "makeNoise"]
}
